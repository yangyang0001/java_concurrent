------------------------------------------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------- 第I部分 基础 ----------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------------------------------------------
第1章: 线程安全
    1、编写线程安全的代码, 就是对数据状态的管理, 通常这个状态是 共享的, 可变的!
    2、一个变量是不是线程安全的, 取决于是否有多个线程共同访问并操作当前变量;
       无论在任何时候, 如果存在一个以上的线程对同一个的共享变量进行操作, 此时必须要用同步来协调多个线程对变量的访问,否则有问题

    任何出现线程安全的状况, 解决方案有以下三种方式: [甚至开发初期就这样设计]
        a、不使用任何跨线程的共享变量。
        b、共享变量不可变的。
        c、任何访问跨线程的共享变量的时候都使用同步。

    线程安全类：线程安全类封装的任何必要的同步, 因此调用方不用加任何同步来确保线程的安全性!

    check then act 检查后再运行的策略

    内部锁
        synchronized块 分为两个部分, 1锁引用的对象   2锁包含的代码块
        每个java对象都可以充当一个同步锁的角色, 这种内置的锁又称为内部锁或监视器锁(monitor locks), 线程获取锁的唯一途径就是进入synchronized包裹的代码块, 释放锁的途径就退出代码块(正常退出或异常退出)


    每个可变的共享变量, 必须由一个确定的锁来保护, 而维护者应该清除这个锁！






















































































------------------------------------------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------- 第II部分 构建并发程序 --------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------------------------------------------




------------------------------------------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------- 第III部分 活跃度性、性能测试 ---------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------------------------------------------





------------------------------------------------------------------------------------------------------------------------------------------------------------
------------------------------------------------------------------------- 第IV部分 高级主题 ------------------------------------------------------------------
------------------------------------------------------------------------------------------------------------------------------------------------------------